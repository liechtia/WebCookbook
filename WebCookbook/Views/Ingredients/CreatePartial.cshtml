@using WebCookbook.Models
@model WebCookbook.Models.RecipeViewModel

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<table>
    <tbody>
    <tr>
        <td>
            @if (RecipeViewModel.IngredientCounter.Instance.IngredientCount == 0)
            {
                <p> Amount: </p>
            }
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredients[RecipeViewModel.IngredientCounter.Instance.IngredientCount].AmountPerInitialServing, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Ingredients[RecipeViewModel.IngredientCounter.Instance.IngredientCount].AmountPerInitialServing, "", new {@class = "text-danger"})
            </div>
        </td>
        <td>
            @if (RecipeViewModel.IngredientCounter.Instance.IngredientCount == 0)
            {
                <p> Measurement: </p>
            }
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredients[RecipeViewModel.IngredientCounter.Instance.IngredientCount].Measurement, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Ingredients[RecipeViewModel.IngredientCounter.Instance.IngredientCount].Measurement, "", new {@class = "text-danger"})
            </div>
        </td>
        <td>
            @if (RecipeViewModel.IngredientCounter.Instance.IngredientCount == 0)
            {
                <p>I Ingredient: </p>
            }
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredients[RecipeViewModel.IngredientCounter.Instance.IngredientCount].IngredientName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Ingredients[RecipeViewModel.IngredientCounter.Instance.IngredientCount].IngredientName, "", new {@class = "text-danger"})
            </div>
        </td>
    </tr>
    </tbody>
</table>
